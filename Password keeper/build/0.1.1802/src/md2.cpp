#include <stdio.h>
 
#include "md2.h"

static unsigned char PI_SUBST[256] = {
		41, 46, 67, 201, 162, 216, 124, 1, 61, 54, 84, 161, 236, 240, 6,
		19, 98, 167, 5, 243, 192, 199, 115, 140, 152, 147, 43, 217, 188,
		76, 130, 202, 30, 155, 87, 60, 253, 212, 224, 22, 103, 66, 111, 24,
		138, 23, 229, 18, 190, 78, 196, 214, 218, 158, 222, 73, 160, 251,
		245, 142, 187, 47, 238, 122, 169, 104, 121, 145, 21, 178, 7, 63,
		148, 194, 16, 137, 11, 34, 95, 33, 128, 127, 93, 154, 90, 144, 50,
		39, 53, 62, 204, 231, 191, 247, 151, 3, 255, 25, 48, 179, 72, 165,
		181, 209, 215, 94, 146, 42, 172, 86, 170, 198, 79, 184, 56, 210,
		150, 164, 125, 182, 118, 252, 107, 226, 156, 116, 4, 241, 69, 157,
		112, 89, 100, 113, 135, 32, 134, 91, 207, 101, 230, 45, 168, 2, 27,
		96, 37, 173, 174, 176, 185, 246, 28, 70, 97, 105, 52, 64, 126, 15,
		85, 71, 163, 35, 221, 81, 175, 58, 195, 92, 249, 206, 186, 197,
		234, 38, 44, 83, 13, 110, 133, 40, 132, 9, 211, 223, 205, 244, 65,
		129, 77, 82, 106, 220, 55, 200, 108, 193, 171, 250, 36, 225, 123,
		8, 12, 189, 177, 74, 120, 136, 149, 139, 227, 99, 232, 109, 233,
		203, 213, 254, 59, 0, 29, 57, 242, 239, 183, 14, 102, 88, 208, 228,
		166, 119, 114, 248, 235, 117, 75, 10, 49, 68, 80, 180, 143, 237,
		31, 26, 219, 153, 141, 51, 159, 17, 131, 20
};

static unsigned char x_buffer[48];

MD2::MD2()
{
}

MD2::~MD2()
{
}

void MD2::computeHash(unsigned char *message, int l, char hash[32])
{
	/*appending message*/
// 	int a = (l/16 + 1)*16 - l;
	int a = l%16;
	a = 16 -a;
	mes = new unsigned char[l + a + 16];
	
	int N = l + a;
	for(int i = 0; i < l; i++)
		mes[i] = message[i];
 	for(int i = l; i < N; i++)
 		mes[i] = a;
	
	/*computing and appending a checksum*/
	unsigned char C[16];
	int c, L;
	for(int i = 0; i < 16; i++)
		C[i] = 0;
	L = 0;
	for(int i = 0; i < N/16; i++)
	{
		for(int j = 0; j < 16; j++)
		{
			c = mes[i*16 + j];
			C[j] = PI_SUBST[c^L];
			L = C[j];
		}
	}
	
	for(int i = 0; i < 16; i++)
		mes[N + i] = C[i];
	
	/*zero the 48-byte buffer*/
	for(int i = 0; i < 48; i++)
		x_buffer[i] = 0;
	
	/*process message*/
	N += 16;
	int t;
	
	for(int i = 0; i < N/16; i++)
	{
		for(int j = 0; j < 16; j++)
		{
			x_buffer[16 + j] = mes[i*16 + j];
			x_buffer[32 + j] = x_buffer[16 + j] ^ x_buffer[j];
		}
		t = 0;
		
		for(int j = 0; j < 18; j++)
		{
			for(int k = 0; k < 48; k++)
				t = x_buffer[k] ^= PI_SUBST[t];
			t = (t + j)%256;
		}
	}
	
	/*returning the hash*/
	char s[3];
	for(int i = 0; i < 16; i++){
 		sprintf(s, "%02x", x_buffer[i]);
 		hash[2*i] = s[0];
 		hash[2*i + 1] = s[1];
	}
	hash[32] = '\0';
}




