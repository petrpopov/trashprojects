#############################################################################
# Makefile for building: ../bin/pkeeper
# Generated by qmake (1.07a) (Qt 3.3.4) on: Wed Feb 15 19:51:48 2006
# Project:  pkeeper.pro
# Template: app
# Command: $(QMAKE) -o Makefile pkeeper.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2 -mcpu=pentium4  -DQT_NO_DEBUG
CXXFLAGS = -pipe -Wall -W -O2 -mcpu=pentium4  -DQT_NO_DEBUG
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I$(QTDIR)/mkspecs/linux-g++ -I. -I$(QTDIR)/include
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -L/usr/X11R6/lib -lqt -lXext -lX11 -lm
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

SOURCES = mainform.cpp \
		newfield.cpp \
		main.cpp \
		createprofile.cpp \
		checkpass.cpp \
		changeprofile.cpp \
		md2.cpp \
		rc4.cpp
OBJECTS = mainform.o \
		newfield.o \
		main.o \
		createprofile.o \
		checkpass.o \
		changeprofile.o \
		md2.o \
		rc4.o \
		qmake_image_collection.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = moc_mainform.cpp \
		moc_newfield.cpp \
		moc_createprofile.cpp \
		moc_checkpass.cpp \
		moc_changeprofile.cpp
OBJMOC = moc_mainform.o \
		moc_newfield.o \
		moc_createprofile.o \
		moc_checkpass.o \
		moc_changeprofile.o
DIST	   = pkeeper.pro
QMAKE_TARGET = pkeeper
DESTDIR  = ../bin/
TARGET   = ../bin/pkeeper

first: all
####### Implicit rules

SUFFIXES = .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	test -d ../bin/ || mkdir -p ../bin/
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: pkeeper.pro  $(QTDIR)/mkspecs/linux-g++/qmake.conf 
	$(QMAKE) -o Makefile pkeeper.pro
qmake: 
	@$(QMAKE) -o Makefile pkeeper.pro

dist: 
	@mkdir -p .tmp/pkeeper && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/pkeeper/ && $(COPY_FILE) --parents icons/close.png icons/new.png icons/open.png icons/save.png icons/delete.png icons/delete_all.png icons/tb_close.png icons/tb_delete.png icons/tb_new.png icons/tb_open.png icons/tb_save.png icons/account.png icons/icq.png icons/irc.png icons/mail.png icons/system.png icons/other.png icons/edit.png icons/tb_edit.png icons/undo.png icons/tb_undo.png icons/redo.png icons/tb_redo.png .tmp/pkeeper/ && ( cd `dirname .tmp/pkeeper` && $(TAR) pkeeper.tar pkeeper && $(GZIP) pkeeper.tar ) && $(MOVE) `dirname .tmp/pkeeper`/pkeeper.tar.gz . && $(DEL_FILE) -r .tmp/pkeeper

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:

yaccclean:
lexclean:
clean: mocclean
	-$(DEL_FILE) $(OBJECTS)
		-$(DEL_FILE) qmake_image_collection.cpp
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) ../bin/$(TARGET) $(TARGET)


FORCE:

####### Compile

mainform.o: mainform.cpp mainform.h \
		newfield.h \
		createprofile.h \
		checkpass.h \
		changeprofile.h \
		rc4.h \
		md2.h

newfield.o: newfield.cpp newfield.h

main.o: main.cpp mainform.h

createprofile.o: createprofile.cpp createprofile.h \
		md2.h

checkpass.o: checkpass.cpp checkpass.h \
		md2.h

changeprofile.o: changeprofile.cpp changeprofile.h

md2.o: md2.cpp md2.h

rc4.o: rc4.cpp rc4.h

moc_mainform.o: moc_mainform.cpp  mainform.h 

moc_newfield.o: moc_newfield.cpp  newfield.h 

moc_createprofile.o: moc_createprofile.cpp  createprofile.h 

moc_checkpass.o: moc_checkpass.cpp  checkpass.h 

moc_changeprofile.o: moc_changeprofile.cpp  changeprofile.h 

moc_mainform.cpp: $(MOC) mainform.h
	$(MOC) mainform.h -o moc_mainform.cpp

moc_newfield.cpp: $(MOC) newfield.h
	$(MOC) newfield.h -o moc_newfield.cpp

moc_createprofile.cpp: $(MOC) createprofile.h
	$(MOC) createprofile.h -o moc_createprofile.cpp

moc_checkpass.cpp: $(MOC) checkpass.h
	$(MOC) checkpass.h -o moc_checkpass.cpp

moc_changeprofile.cpp: $(MOC) changeprofile.h
	$(MOC) changeprofile.h -o moc_changeprofile.cpp

qmake_image_collection.o: qmake_image_collection.cpp

qmake_image_collection.cpp: icons/close.png \
		icons/new.png \
		icons/open.png \
		icons/save.png \
		icons/delete.png \
		icons/delete_all.png \
		icons/tb_close.png \
		icons/tb_delete.png \
		icons/tb_new.png \
		icons/tb_open.png \
		icons/tb_save.png \
		icons/account.png \
		icons/icq.png \
		icons/irc.png \
		icons/mail.png \
		icons/system.png \
		icons/other.png \
		icons/edit.png \
		icons/tb_edit.png \
		icons/undo.png \
		icons/tb_undo.png \
		icons/redo.png \
		icons/tb_redo.png
	$(UIC)  -embed pkeeper icons/close.png icons/new.png icons/open.png icons/save.png icons/delete.png icons/delete_all.png icons/tb_close.png icons/tb_delete.png icons/tb_new.png icons/tb_open.png icons/tb_save.png icons/account.png icons/icq.png icons/irc.png icons/mail.png icons/system.png icons/other.png icons/edit.png icons/tb_edit.png icons/undo.png icons/tb_undo.png icons/redo.png icons/tb_redo.png -o qmake_image_collection.cpp

####### Install

install:  
	-$(COPY_FILE) $(TARGET) /usr/local/bin/pkeeper
	@echo ""
	@echo "=========================="
	@echo "=  Password keeper - INSTALLED  ================================"
	@echo "=========================="
	@echo "="
	@echo "=  Type pkeeper to start!"
	@echo "="
	@echo "=  If you have problems, please contact me at piton3000@rambler.ru"
	@echo "="
	@echo "======================================================="
uninstall:  
	-$(DEL_FILE) /usr/local/bin/pkeeper

