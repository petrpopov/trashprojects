#############################################################################
# Makefile for building: gameclient
# Generated by qmake (1.07a) (Qt 3.3.4) on: Mon Feb  6 15:51:23 2006
# Project:  gameclient.pro
# Template: app
# Command: $(QMAKE) -o Makefile gameclient.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2 -mcpu=pentium4  -DQT_NO_DEBUG
CXXFLAGS = -pipe -Wall -W -O2 -mcpu=pentium4  -DQT_NO_DEBUG
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/qt/3/mkspecs/linux-g++ -I. -I$(QTDIR)/include
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -L/usr/X11R6/lib -lqt -lXext -lX11 -lm
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = mainform.h \
		creategame.h \
		findgame.h \
		addserver.h \
		mynetworkobject.h \
		gamedialog.h \
		helpbrowser.h \
		checker.h \
		cleardialog.h
SOURCES = mainform.cpp \
		main.cpp \
		creategame.cpp \
		findgame.cpp \
		addserver.cpp \
		gamedialog.cpp \
		helpbrowser.cpp \
		cleardialog.cpp
OBJECTS = mainform.o \
		main.o \
		creategame.o \
		findgame.o \
		addserver.o \
		gamedialog.o \
		helpbrowser.o \
		cleardialog.o \
		qmake_image_collection.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = moc_mainform.cpp \
		moc_creategame.cpp \
		moc_findgame.cpp \
		moc_addserver.cpp \
		moc_gamedialog.cpp \
		moc_helpbrowser.cpp \
		moc_cleardialog.cpp
OBJMOC = moc_mainform.o \
		moc_creategame.o \
		moc_findgame.o \
		moc_addserver.o \
		moc_gamedialog.o \
		moc_helpbrowser.o \
		moc_cleardialog.o
DIST	   = gameclient.pro
QMAKE_TARGET = gameclient
DESTDIR  = 
TARGET   = gameclient

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: gameclient.pro  /usr/qt/3/mkspecs/linux-g++/qmake.conf 
	$(QMAKE) -o Makefile gameclient.pro
qmake: 
	@$(QMAKE) -o Makefile gameclient.pro

dist: 
	@mkdir -p .tmp/gameclient && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/gameclient/ && $(COPY_FILE) --parents images/new.png images/open.png images/save.png images/create.png images/find.png images/icon.png images/check.png images/help.png images/back.png images/fwd.png images/exit.png images/home.png images/gear.png .tmp/gameclient/ && ( cd `dirname .tmp/gameclient` && $(TAR) gameclient.tar gameclient && $(GZIP) gameclient.tar ) && $(MOVE) `dirname .tmp/gameclient`/gameclient.tar.gz . && $(DEL_FILE) -r .tmp/gameclient

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:

yaccclean:
lexclean:
clean: mocclean
	-$(DEL_FILE) $(OBJECTS)
		-$(DEL_FILE) qmake_image_collection.cpp
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

mainform.o: mainform.cpp mainform.h \
		addserver.h \
		creategame.h \
		findgame.h \
		gamedialog.h \
		helpbrowser.h \
		cleardialog.h \
		checker.h \
		mynetworkobject.h

main.o: main.cpp mainform.h \
		mynetworkobject.h

creategame.o: creategame.cpp creategame.h \
		helpbrowser.h \
		mainform.h \
		mynetworkobject.h

findgame.o: findgame.cpp findgame.h \
		mainform.h \
		helpbrowser.h \
		mynetworkobject.h

addserver.o: addserver.cpp addserver.h

gamedialog.o: gamedialog.cpp gamedialog.h

helpbrowser.o: helpbrowser.cpp helpbrowser.h

cleardialog.o: cleardialog.cpp cleardialog.h

moc_mainform.o: moc_mainform.cpp  mainform.h mynetworkobject.h

moc_creategame.o: moc_creategame.cpp  creategame.h 

moc_findgame.o: moc_findgame.cpp  findgame.h 

moc_addserver.o: moc_addserver.cpp  addserver.h 

moc_gamedialog.o: moc_gamedialog.cpp  gamedialog.h 

moc_helpbrowser.o: moc_helpbrowser.cpp  helpbrowser.h 

moc_cleardialog.o: moc_cleardialog.cpp  cleardialog.h 

moc_mainform.cpp: $(MOC) mainform.h
	$(MOC) mainform.h -o moc_mainform.cpp

moc_creategame.cpp: $(MOC) creategame.h
	$(MOC) creategame.h -o moc_creategame.cpp

moc_findgame.cpp: $(MOC) findgame.h
	$(MOC) findgame.h -o moc_findgame.cpp

moc_addserver.cpp: $(MOC) addserver.h
	$(MOC) addserver.h -o moc_addserver.cpp

moc_gamedialog.cpp: $(MOC) gamedialog.h
	$(MOC) gamedialog.h -o moc_gamedialog.cpp

moc_helpbrowser.cpp: $(MOC) helpbrowser.h
	$(MOC) helpbrowser.h -o moc_helpbrowser.cpp

moc_cleardialog.cpp: $(MOC) cleardialog.h
	$(MOC) cleardialog.h -o moc_cleardialog.cpp

qmake_image_collection.o: qmake_image_collection.cpp

qmake_image_collection.cpp: images/new.png \
		images/open.png \
		images/save.png \
		images/create.png \
		images/find.png \
		images/icon.png \
		images/check.png \
		images/help.png \
		images/back.png \
		images/fwd.png \
		images/exit.png \
		images/home.png \
		images/gear.png
	$(UIC)  -embed gameclient images/new.png images/open.png images/save.png images/create.png images/find.png images/icon.png images/check.png images/help.png images/back.png images/fwd.png images/exit.png images/home.png images/gear.png -o qmake_image_collection.cpp

####### Install

install:  

uninstall:  

